     1                                  bits 32
     2                                  global start        
     3                                  extern exit               
     4                                  import exit msvcrt.dll    
     5                                  
     6                                  segment data use32 class=data
     7 00000000 02FCFD03040206              A db 2, -4, -3, 3, 4, 2, 6
     8                                      l1 equ $-A ; compute the length of A into l1
     9 00000007 0405FB07FAFE01              B db 4, 5, -5, 7, -6, -2, 1
    10                                      l2 equ $-B ; compute the length of B into l2
    11 0000000E 00<rept>                    C times l1 + l2 db 0
    12 0000001C 00                          l3 db 0
    13 0000001D FF                          d db 255
    14                                  
    15                                  segment code use32 class=code
    16                                      start:
    17 00000000 B907000000                      mov ECX, l1
    18 00000005 BE00000000                      mov ESI, 0
    19 0000000A BF00000000                      mov EDI, 0
    20 0000000F E360                            jecxz Sfarsit
    21                                              loop1:
    22 00000011 8A86[00000000]                          mov AL, [A + ESI]
    23 00000017 6698                                    cbw ; AX = AL
    24 00000019 B302                                    mov BL, 2
    25 0000001B F6FB                                    idiv BL ; AX / 2
    26 0000001D 80FC00                                  cmp AH, 0
    27 00000020 7517                                    jne end_1
    28 00000022 8A86[00000000]                          mov AL, [A + ESI]
    29 00000028 3C00                                    cmp byte AL, 0
    30 0000002A 7D0D                                    jge end_1
    31 0000002C 8A86[00000000]                          mov AL, [A + ESI]
    32 00000032 8887[0E000000]                          mov [C + EDI], AL
    33 00000038 47                                      inc EDI
    34                                                  end_1:
    35 00000039 46                                      inc ESI
    36                                              
    37 0000003A E2D5                                loop loop1
    38 0000003C B907000000                          mov ECX, l2
    39 00000041 BE00000000                          mov ESI, 0
    40                                              loop2:
    41 00000046 8A86[07000000]                          mov AL, [B + ESI]
    42 0000004C 6698                                    cbw ; AX = AL
    43 0000004E B302                                    mov BL, 2
    44 00000050 F6FB                                    idiv BL ; AX / 2
    45 00000052 80FC00                                  cmp AH, 0
    46 00000055 7517                                    jne end_2
    47 00000057 8A86[07000000]                          mov AL, [B + ESI]
    48 0000005D 3C00                                    cmp byte AL, 0
    49 0000005F 7D0D                                    jge end_2
    50 00000061 8A86[07000000]                          mov AL, [B + ESI]
    51 00000067 8887[0E000000]                          mov [C + EDI], AL
    52 0000006D 47                                      inc EDI
    53                                                  end_2:
    54 0000006E 46                                      inc ESI
    55                                              
    56 0000006F E2D5                                loop loop2
    57                                          
    58                                          Sfarsit:
    59                                          
    60 00000071 6A00                            push    dword 0      
    61 00000073 FF15[00000000]                  call    [exit]       
